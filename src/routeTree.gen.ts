/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as appAppRouteImport } from './routes/(app)/_app'
import { Route as appAppIndexRouteImport } from './routes/(app)/_app.index'
import { Route as appAppVotingRoomIdIndexRouteImport } from './routes/(app)/_app.voting-room.$id/index'

const appRouteImport = createFileRoute('/(app)')()

const appRoute = appRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/auth/index.lazy').then((d) => d.Route))
const appAppRoute = appAppRouteImport.update({
  id: '/_app',
  getParentRoute: () => appRoute,
} as any)
const appAppIndexRoute = appAppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appAppRoute,
} as any)
const appAppVotingRoomIdIndexRoute = appAppVotingRoomIdIndexRouteImport
  .update({
    id: '/voting-room/$id/',
    path: '/voting-room/$id/',
    getParentRoute: () => appAppRoute,
  } as any)
  .lazy(() =>
    import('./routes/(app)/_app.voting-room.$id/index.lazy').then(
      (d) => d.Route,
    ),
  )

export interface FileRoutesByFullPath {
  '/': typeof appAppIndexRoute
  '/auth': typeof AuthIndexRoute
  '/voting-room/$id': typeof appAppVotingRoomIdIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthIndexRoute
  '/': typeof appAppIndexRoute
  '/voting-room/$id': typeof appAppVotingRoomIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(app)': typeof appRouteWithChildren
  '/(app)/_app': typeof appAppRouteWithChildren
  '/auth/': typeof AuthIndexRoute
  '/(app)/_app/': typeof appAppIndexRoute
  '/(app)/_app/voting-room/$id/': typeof appAppVotingRoomIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth' | '/voting-room/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/' | '/voting-room/$id'
  id:
    | '__root__'
    | '/(app)'
    | '/(app)/_app'
    | '/auth/'
    | '/(app)/_app/'
    | '/(app)/_app/voting-room/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  appRoute: typeof appRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/_app': {
      id: '/(app)/_app'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appAppRouteImport
      parentRoute: typeof appRoute
    }
    '/(app)/_app/': {
      id: '/(app)/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appAppIndexRouteImport
      parentRoute: typeof appAppRoute
    }
    '/(app)/_app/voting-room/$id/': {
      id: '/(app)/_app/voting-room/$id/'
      path: '/voting-room/$id'
      fullPath: '/voting-room/$id'
      preLoaderRoute: typeof appAppVotingRoomIdIndexRouteImport
      parentRoute: typeof appAppRoute
    }
  }
}

interface appAppRouteChildren {
  appAppIndexRoute: typeof appAppIndexRoute
  appAppVotingRoomIdIndexRoute: typeof appAppVotingRoomIdIndexRoute
}

const appAppRouteChildren: appAppRouteChildren = {
  appAppIndexRoute: appAppIndexRoute,
  appAppVotingRoomIdIndexRoute: appAppVotingRoomIdIndexRoute,
}

const appAppRouteWithChildren =
  appAppRoute._addFileChildren(appAppRouteChildren)

interface appRouteChildren {
  appAppRoute: typeof appAppRouteWithChildren
}

const appRouteChildren: appRouteChildren = {
  appAppRoute: appAppRouteWithChildren,
}

const appRouteWithChildren = appRoute._addFileChildren(appRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  appRoute: appRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
